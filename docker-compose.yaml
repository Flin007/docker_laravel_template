version: "3.8"

services:
  #Наш сервак, отображает сайт на localhost:8000
  nginx:
    image: "nginx:stable-alpine"
    ports:
      - "8000:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./src:/var/www/laravel
    depends_on:
      - mysql
      - php
  #PHP, его настройки и установка модулей в файле php.Dockerfile
  php:
    build:
      context: dockerfiles
      dockerfile: php.Dockerfile
    volumes:
      - ./src:/var/www/laravel
    extra_hosts:
      - host.docker.internal:host-gateway
  #Reverb сервис для работы с вебсокетами
  reverb:
    build:
      context: dockerfiles
      dockerfile: php.Dockerfile  # используйте тот же Dockerfile
    volumes:
      - ./src:/var/www/laravel
    entrypoint: [ "php", "/var/www/laravel/artisan", "reverb:start" ]
    ports:
      - "8080:8080"  # Проброс порта 8080 для WebSocket
    depends_on:
      - php  # Этот сервис зависит от php
  #Ну это просто mysql база данных
  mysql:
    image: mysql:8.0
    ports:
      - "3316:3306"
    env_file:
      - env/mysql.env
    volumes:
      - db_data:/var/lib/mysql
  #А это phpmyadmin доступный на localhost:8088
  phpmyadmin:
    image: phpmyadmin
    restart: always
    ports:
      - "8088:80"
    environment:
      - PMA_ARBITRARY=1
  # Воркер для обработки задач в очереди
  queue-worker:
    build:
      context: dockerfiles
      dockerfile: php.Dockerfile
    volumes:
      - ./src:/var/www/laravel
    depends_on:
      - mysql  # Убедитесь, что воркер запускается после базы данных
    command: ["php", "/var/www/laravel/artisan", "queue:work", "--sleep=3", "--tries=3"]
  #Композер, пакетный менеджер, запускаем docker compose run composer require.....
  composer:
    build:
      context: dockerfiles
      dockerfile: composer.Dockerfile
    volumes:
      - ./src:/var/www/laravel
  #Ларовский artisan, запускаем docker compose run artisan make:model.....
  artisan:
    build:
      context: dockerfiles
      dockerfile: php.Dockerfile
    volumes:
      - ./src:/var/www/laravel
    entrypoint: ["php", "/var/www/laravel/artisan"]

volumes:
  db_data:
